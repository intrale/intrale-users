name: CI intrale-users

on:
  push:
    branches: [ main ]
  repository_dispatch:       
jobs:
  deploy-lambda:
    runs-on: ubuntu-latest
    steps:
      - name: Download source code
        uses: actions/checkout@v3
      - name: JDK Setup
        uses: actions/setup-java@v2
        with:
            java-version: '11' # The JDK version to make available on the path.
            distribution: 'temurin'
            java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
            architecture: x64 # (x64 or x86) - defaults to x64
      - name: Version definition
        run: |
           echo "PARENT_VERSION=0.1.27" >> $GITHUB_ENV
           echo "CORE_VERSION=0.1.5" >> $GITHUB_ENV
           echo "COMMONS_VERSION=0.1.9" >> $GITHUB_ENV
           echo "TEST_VERSION=0.1.7" >> $GITHUB_ENV
           echo "VERSION=0" >> $GITHUB_ENV
           echo "FEATURE=1" >> $GITHUB_ENV
      - name: Get Compile Number
        run: |
           git pull
           COMPILE_NUMBER=`cat ./compile.number`
           echo "COMPILE_NUMBER=$(($COMPILE_NUMBER+1))" >> $GITHUB_ENV
      - name: Version target definition
        env:
          VERSION: ${{ env.VERSION }}
          FEATURE: ${{ env.FEATURE }}
          COMPILE_NUMBER: ${{ env.COMPILE_NUMBER }}
        run: |
          echo "VERSION_TARGET=${VERSION}.${FEATURE}.${COMPILE_NUMBER}" >> $GITHUB_ENV
      - name: Tag definition
        env:
          VERSION: ${{ env.VERSION }}
          FEATURE: ${{ env.FEATURE }}
          COMPILE_NUMBER: ${{ env.COMPILE_NUMBER }}    
        run: |
          echo "TAG=${VERSION}_${FEATURE}_${COMPILE_NUMBER}" >> $GITHUB_ENV
      - name: Override compile number
        env:
          COMPILE_NUMBER: ${{ env.COMPILE_NUMBER }}  
          VERSION_TARGET: ${{ env.VERSION_TARGET }}         
        run: |
          echo "Contenido compile.number"
          cat ./compile.number
          echo "Variable COMPILE NUMBER:${COMPILE_NUMBER} => ./compile.number"
          echo "${COMPILE_NUMBER}" > ./compile.number
          echo "Contenido compile.number sobreescrito"
          cat ./compile.number
      - name: Commit with new compile number
        env:
          COMPILE_NUMBER: ${{ env.COMPILE_NUMBER }}  
          VERSION_TARGET: ${{ env.VERSION_TARGET }}         
        run: |
          echo "Commit version actual"
          git config --local user.email "github-actions@users.noreply.github.com"
          git config --local user.name "github-actions"
          git commit -m "[bot]Compile version ${VERSION_TARGET}" -a
          echo "Push en repo"
          git push        
      - name: Tag version
        run: |
          echo "Generacion del tag"
          git tag -a VER_${{ env.TAG }} -m 'VER_${{ env.TAG }}'
          git push origin VER_${{ env.TAG }}
          echo "Finalizando interaccion con fuentes"        
      - name: Compile and Upload Service to Github Package Registry
        env:
          PARENT_VERSION: ${{ env.PARENT_VERSION }}
          CORE_VERSION: ${{ env.CORE_VERSION }}
          COMMONS_VERSION: ${{ env.COMMONS_VERSION }}
          TEST_VERSION: ${{ env.TEST_VERSION }}
          VERSION_TARGET: ${{ env.VERSION_TARGET }}
          MAVEN_SERVER_USERNAME: ${{ secrets.MAVEN_SERVER_USERNAME }}
          MAVEN_SERVER_PASSWORD: ${{ secrets.MAVEN_SERVER_PASSWORD }}
          COGNITO_ACCESS: ${{ secrets.COGNITO_ACCESS }} 
          COGNITO_SECRET: ${{ secrets.COGNITO_SECRET }} 
          DATABASE_ACCESS: ${{ secrets.DATABASE_ACCESS }} 
          DATABASE_SECRET: ${{ secrets.DATABASE_SECRET }} 
        run: |
          sed -i "s/PARENT_VERSION/${PARENT_VERSION}/gi" pom.xml
          sed -i "s/CORE_VERSION/${CORE_VERSION}/gi" pom.xml
          sed -i "s/COMMONS_VERSION/${COMMONS_VERSION}/gi" pom.xml
          sed -i "s/TEST_VERSION/${TEST_VERSION}/gi" pom.xml
          sed -i "s/USERS_VERSION/${VERSION_TARGET}/gi" pom.xml
          sed -i "s/USERS_VERSION/${VERSION_TARGET}/gi" ./core/pom.xml
          sed -i "s/CORE_VERSION/${CORE_VERSION}/gi" ./core/pom.xml
          sed -i "s/USERS_VERSION/${VERSION_TARGET}/gi" ./services/pom.xml
          sed -i "s/COMMONS_VERSION/${COMMONS_VERSION}/gi" ./services/pom.xml
          sed -i "s/TEST_VERSION/${TEST_VERSION}/gi" ./services/pom.xml
          mkdir -p ~/.m2
          echo "<settings><servers><server><id>github</id><username>${MAVEN_SERVER_USERNAME}</username><password>${MAVEN_SERVER_PASSWORD}</password></server></servers></settings>" > ~/.m2/settings.xml
          mvn clean compile package install
          mvn -e -X deploy
      - name: Deploy lambda
        uses: yvesgurcan/deploy-lambda-function@master
        with:
          package: ./services/target/users-services.jar
          function-name: users
          AWS_REGION: ${{ secrets.AWS_DEPLOY_REGION }}
          AWS_SECRET_ID: ${{ secrets.AWS_DEPLOYER_SECRET_ID }}
          AWS_SECRET_KEY: ${{ secrets.AWS_DEPLOYER_SECRET_KEY }} 
      - name: Compile and Upload Client to Github Package Registry
        env:
          PARENT_VERSION: ${{ env.PARENT_VERSION }}
          CORE_VERSION: ${{ env.CORE_VERSION }}
          COMMONS_VERSION: ${{ env.COMMONS_VERSION }}
          TEST_VERSION: ${{ env.TEST_VERSION }}
          VERSION_TARGET: ${{ env.VERSION_TARGET }}
          MAVEN_SERVER_USERNAME: ${{ secrets.MAVEN_SERVER_USERNAME }}
          MAVEN_SERVER_PASSWORD: ${{ secrets.MAVEN_SERVER_PASSWORD }}
          COGNITO_ACCESS: ${{ secrets.COGNITO_ACCESS }} 
          COGNITO_SECRET: ${{ secrets.COGNITO_SECRET }} 
          DATABASE_ACCESS: ${{ secrets.DATABASE_ACCESS }} 
          DATABASE_SECRET: ${{ secrets.DATABASE_SECRET }} 
        run: |
          sed -i "s/USERS_VERSION/${VERSION_TARGET}/gi" ./client/pom.xml
          sed -i "s/CORE_VERSION/${CORE_VERSION}/gi" ./client/pom.xml
          sed -i "s/COMMONS_VERSION/${COMMONS_VERSION}/gi" ./client/pom.xml
          sed -i "s/TEST_VERSION/${TEST_VERSION}/gi" ./client/pom.xml
          cd client
          mvn clean compile package install
          mvn -e -X deploy         
      - name: Delete old packages
        uses: actions/delete-package-versions@v3
        with:
          owner: 'llarreta'
          repo: 'intrale'
          package-name: 'ar.com.intrale.users'
          min-versions-to-keep: 3
          token: ${{ secrets.MAVEN_SERVER_PASSWORD }}             
      - name: Delete old packages
        uses: actions/delete-package-versions@v3
        with:
          owner: 'llarreta'
          repo: 'intrale'
          package-name: 'ar.com.intrale.users-core'
          min-versions-to-keep: 3
          token: ${{ secrets.MAVEN_SERVER_PASSWORD }}               
      - name: Delete old packages
        uses: actions/delete-package-versions@v3
        with:
          owner: 'llarreta'
          repo: 'intrale'
          package-name: 'ar.com.intrale.users-services'
          min-versions-to-keep: 3
          token: ${{ secrets.MAVEN_SERVER_PASSWORD }}            
      - name: Delete old packages
        uses: actions/delete-package-versions@v3
        with:
          owner: 'llarreta'
          repo: 'intrale'
          package-name: 'ar.com.intrale.users-client'
          min-versions-to-keep: 3
          token: ${{ secrets.MAVEN_SERVER_PASSWORD }}                